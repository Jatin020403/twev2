[{"D:\\Code\\twev2\\src\\index.js":"1","D:\\Code\\twev2\\src\\App.js":"2","D:\\Code\\twev2\\src\\pages\\home.js":"3","D:\\Code\\twev2\\src\\pages\\login.js":"4","D:\\Code\\twev2\\src\\pages\\dashboard.js":"5","D:\\Code\\twev2\\src\\components\\dashboard\\sidebar.js":"6","D:\\Code\\twev2\\src\\components\\dashboard\\onboarding.js":"7","D:\\Code\\twev2\\src\\components\\dashboard\\navbar.js":"8","D:\\Code\\twev2\\src\\components\\dashboard\\page.js":"9","D:\\Code\\twev2\\src\\components\\pages\\new-article.js":"10","D:\\Code\\twev2\\src\\components\\pages\\extras.js":"11","D:\\Code\\twev2\\src\\components\\pages\\dashboard.js":"12","D:\\Code\\twev2\\src\\components\\pages\\your-article.js":"13","D:\\Code\\twev2\\src\\components\\pages\\signout.js":"14","D:\\Code\\twev2\\src\\components\\pages\\create-edition.js":"15","D:\\Code\\twev2\\src\\components\\pages\\all-articles.js":"16","D:\\Code\\twev2\\src\\components\\pages\\old-editions.js":"17","D:\\Code\\twev2\\src\\components\\pages\\article-view.js":"18"},{"size":209,"mtime":1638285392136,"results":"19","hashOfConfig":"20"},{"size":1381,"mtime":1638285392101,"results":"21","hashOfConfig":"20"},{"size":1925,"mtime":1638285392138,"results":"22","hashOfConfig":"20"},{"size":12087,"mtime":1638285392138,"results":"23","hashOfConfig":"20"},{"size":1654,"mtime":1638285392137,"results":"24","hashOfConfig":"20"},{"size":3474,"mtime":1638285392107,"results":"25","hashOfConfig":"20"},{"size":11122,"mtime":1638285392104,"results":"26","hashOfConfig":"20"},{"size":645,"mtime":1638285392103,"results":"27","hashOfConfig":"20"},{"size":1248,"mtime":1638285392105,"results":"28","hashOfConfig":"20"},{"size":8910,"mtime":1638285882583,"results":"29","hashOfConfig":"20"},{"size":6067,"mtime":1638285392132,"results":"30","hashOfConfig":"20"},{"size":1984,"mtime":1638285392131,"results":"31","hashOfConfig":"20"},{"size":2139,"mtime":1638285392135,"results":"32","hashOfConfig":"20"},{"size":1225,"mtime":1638285392134,"results":"33","hashOfConfig":"20"},{"size":8224,"mtime":1638285392131,"results":"34","hashOfConfig":"20"},{"size":2116,"mtime":1638285392107,"results":"35","hashOfConfig":"20"},{"size":561,"mtime":1638285392133,"results":"36","hashOfConfig":"20"},{"size":18504,"mtime":1638285392108,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"z8t6c5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"D:\\Code\\twev2\\src\\index.js",[],["81","82"],"D:\\Code\\twev2\\src\\App.js",["83"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from './pages/dashboard'\r\nimport Login from './pages/login'\r\nimport Home from './pages/home'\r\n\r\nfunction App(){\r\n  const [online, setOnline] = React.useState(navigator.onLine)\r\n  if (online) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router basename=\"/twev2\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n            <Home />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n            <Login type={\"login\"} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n            <Login type={\"register\"} />\r\n            </Route>\r\n            <Route path=\"/dashboard/:page\">\r\n            <Dashboard />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n            </Route>\r\n            <Route>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container container-offline\">\r\n      <div>\r\n      <center>\r\n      <img src=\"../img/twe_logo.png\" alt=\"The Weekly Edge Logo\" />\r\n      <h1>Your browser appears to be offline!</h1>\r\n      <h4>You must have an active internet <br /> connection to use The Weekly Edge</h4>\r\n      </center>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\Code\\twev2\\src\\pages\\home.js",[],"D:\\Code\\twev2\\src\\pages\\login.js",[],"D:\\Code\\twev2\\src\\pages\\dashboard.js",[],"D:\\Code\\twev2\\src\\components\\dashboard\\sidebar.js",[],"D:\\Code\\twev2\\src\\components\\dashboard\\onboarding.js",["84","85"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport \"./onboarding.css\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport qs from \"qs\";\r\n\r\nfunction OnBoard(props) {\r\n  const [page, setPage] = React.useState(0);\r\n  const [admin, setAdmin] = React.useState();\r\n  const [error, setError] = React.useState();\r\n  const [status, setStatus] = React.useState(0);\r\n  React.useEffect(() => {\r\n    if (props.admin === \"admin\") {\r\n      setAdmin(true);\r\n    } else {\r\n      setAdmin(false);\r\n    }\r\n  }, [props.admin]);\r\n\r\n  function HandleClick(val) {\r\n    //   console.log(admin);\r\n    //   console.log(props.admin);\r\n    setPage(val);\r\n  }\r\n//   function HandleFinish() {\r\n//       console.log(status);\r\n//     setStatus(1);\r\n//     console.log(status);\r\n//   }\r\n  React.useEffect(() => {\r\n    if (status === 1) {\r\n      axios\r\n        .patch(\"https://thepc.herokuapp.com/api/onboard/\", qs.stringify({}), {\r\n          headers: {\r\n            Authorization: \"Bearer \" + Cookies.get(\"token\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n            console.log(res);\r\n          Cookies.set(\"onb\", \"true\");\r\n          setStatus(2);\r\n        })\r\n        .catch((err) => {\r\n          setStatus(3);\r\n        });\r\n    }\r\n  }, [status]);\r\n\r\n  if (status !== 2) {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutter\">\r\n          {\r\n            //Use this to change the image on the left\r\n          }\r\n          <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n          <div\r\n            className=\"col-md-8 col-lg-6\"\r\n            style={{ backgroundColor: \"rgb(30,30,30)\" }}\r\n          >\r\n            <div className=\"login d-flex align-items-center py-5\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                    {page === 0 ? (\r\n                      <div>\r\n                        <center>\r\n                          <h1 className=\"login-heading mb-4 onb-heading\">\r\n                            Welcome to TWE\r\n                          </h1>\r\n\r\n                          <p className=\"onboard-desc\">\r\n                            The dashboard is our treasury of articles, the last\r\n                            step before it gets published. It is the place where\r\n                            you upload your work for your Editor-in-Chief to\r\n                            approve. You also get to view the articles written\r\n                            by you and your peers and give and receive feedback.\r\n                          </p>\r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                            onClick={() => HandleClick(1)}\r\n                          >\r\n                            Proceed\r\n                          </button>\r\n                          <div className=\"form-label-group text-center\"></div>\r\n                        </center>\r\n                      </div>\r\n                    ) : page === 1 ? (\r\n                      <div>\r\n                        <center>\r\n                          <h1 className=\"login-heading mb-4 onb-heading\">\r\n                            Submit an article\r\n                          </h1>\r\n\r\n                          <p className=\"onboard-desc\">\r\n                            This is the page where you upload your article.\r\n                            Follow these steps to submit your article:- <br />\r\n                            <br />\r\n                            1. Choose your category and Article title. <br />\r\n                            2. Paste your article and add the collaborating\r\n                            author.\r\n                            <br />\r\n                            3. Upload a picture related to the article. <br />\r\n                            You’re good to go!\r\n                          </p>\r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                            onClick={() => HandleClick(2)}\r\n                          >\r\n                            Proceed\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-outline btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                            onClick={() => HandleClick(0)}\r\n                          >\r\n                            Back\r\n                          </button>\r\n                          <div className=\"form-label-group text-center\"></div>\r\n                        </center>\r\n                      </div>\r\n                    ) : page === 2 ? (\r\n                      <div>\r\n                        <center>\r\n                          <h1 className=\"login-heading mb-4 onb-heading\">\r\n                            View an article\r\n                          </h1>\r\n\r\n                          <p className=\"onboard-desc\">\r\n                            This is the page where you can view your previous\r\n                            article and find out if your current piece is\r\n                            approved or not. <br />\r\n                            <br />\r\n                             Click on an article title to view <br />\r\n                            <Icon.PencilFill /> - Edit article\r\n                            <br />\r\n                            <Icon.ChatFill /> - Comment on article\r\n                            <br />\r\n                            <Icon.TrashFill />  - Delete article <br /> <br />\r\n                            To view your peers' work, you can check out the 'All\r\n                            Articles' page.\r\n                          </p>\r\n                          {admin ? \r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                            onClick={() => HandleClick(3)}>\r\n                            Proceed\r\n                          </button>\r\n                          :\r\n                         status === 1 ?\r\n                            <button className=\"btn btn-lg btn-outline-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2\" type=\"submit\"><Loader type=\"Audio\" color=\"#fff\" height={20} width={20} /> </button>\r\n                        :\r\n                          <button\r\n                          className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                          onClick={()=>setStatus(1)}>\r\n                          Get Started\r\n                        </button>\r\n                          }\r\n \r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-outline btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                            onClick={() => HandleClick(1)}>\r\n                            Back\r\n                          </button>\r\n                          <div className=\"form-label-group text-center\">\r\n                            {error}\r\n                          </div>\r\n                        </center>\r\n                      </div>\r\n                    ) : page === 3 ? (\r\n                      <div>\r\n                        <center>\r\n                          <h1 className=\"login-heading mb-4 onb-heading\">\r\n                            Approve/Reject Articles\r\n                          </h1>\r\n\r\n                          <p className=\"onboard-desc\">\r\n                          As Editor-in-Chief you are responsible for approving/rejecting articles submitted by other authors.<br/><br/>\r\n\r\n                        From the menu panel, <br />\r\n                        Click <Icon.EmojiHeartEyesFill /> to Approve <br />\r\n                        Click <Icon.EmojiAngryFill /> to Reject <br />\r\n\r\nOnly articles that have been approved can be added to an edition to be published.\r\n                          </p>\r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                            onClick={() => HandleClick(4)}>\r\n                            Proceed\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-lg btn-dark btn-outline btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                            onClick={() => HandleClick(2)}\r\n                          >\r\n                            Back\r\n                          </button>\r\n                          <div className=\"form-label-group text-center\"></div>\r\n                        </center>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <center>\r\n                          <h1 className=\"login-heading mb-4 onb-heading\">\r\n                            Publish an Edition\r\n                          </h1>\r\n\r\n                          <p className=\"onboard-desc\">\r\n                            1. Enter the edition details <br />\r\n                            2. Add the HoV link <br />\r\n                            3. Click to select/de-select articles from the list <br />\r\n                            4. Click Publish Edition <br />\r\n                          </p>\r\n                          {\r\n                         status === 1 ?\r\n                            <button className=\"btn btn-lg btn-outline-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2\" type=\"submit\"><Loader type=\"Audio\" color=\"#fff\" height={20} width={20} /> </button>\r\n                        :\r\n                          <button\r\n                          className=\"btn btn-lg btn-dark btn-block btn-login btn-blue text-uppercase font-weight-bold mb-2 mt-5\"\r\n                          onClick={()=> setStatus(1)}>\r\n                          Get Started\r\n                        </button>\r\n                          }\r\n                        <button\r\n                            className=\"btn btn-lg btn-dark btn-outline btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                            onClick={() => HandleClick(3)}\r\n                          >\r\n                            Back\r\n                          </button>\r\n                          <div className=\"form-label-group text-center\"></div>\r\n                        </center>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Dashboard />;\r\n  }\r\n}\r\n\r\nexport default OnBoard;\r\n","D:\\Code\\twev2\\src\\components\\dashboard\\navbar.js",[],"D:\\Code\\twev2\\src\\components\\dashboard\\page.js",[],"D:\\Code\\twev2\\src\\components\\pages\\new-article.js",[],"D:\\Code\\twev2\\src\\components\\pages\\extras.js",[],"D:\\Code\\twev2\\src\\components\\pages\\dashboard.js",[],"D:\\Code\\twev2\\src\\components\\pages\\your-article.js",["86"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport \"./articles.css\"\r\nimport ArticleView from './article-view'\r\n\r\nfunction YourArticle(props){\r\n    const [loading, setLoading] = useState(true)\r\n    const [articles, setArticles] = useState()\r\n    const [fact, setFact] = useState()\r\n    const [fetch, setFetch] = useState(true)\r\n    React.useEffect(()=> {\r\n        axios.get(\"https://catfact.ninja/fact?max_length=240\", {\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then((response)=>{\r\n            setFact(response.data.fact)\r\n        })\r\n    },[])\r\n    React.useEffect(() => {\r\n        if (fetch) {\r\n            axios.get('https://thepc.herokuapp.com/api/articles/list?sortBy=createdAt:desc', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + Cookies.get(\"token\")\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log(response.data)\r\n                    setArticles(response.data)\r\n                    setLoading(false)\r\n                    setFetch(false)\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false)\r\n                    setFetch(false)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading &&\r\n            <div>\r\n            <h3>While you wait, did you know that</h3><br />\r\n                    <h6 style={{width: '50%'}}>{fact}</h6><br />\r\n                <div className=\"container-articles\">\r\n\r\n                    <div className=\"loader\">\r\n                        <Loader type=\"TailSpin\" color=\"#ff1e56\" height={100} width={100} timeout={30000} />\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n            }\r\n            {!loading &&\r\n                <ArticleView articlesProps={articles} valid={props.valid}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YourArticle;","D:\\Code\\twev2\\src\\components\\pages\\signout.js",[],"D:\\Code\\twev2\\src\\components\\pages\\create-edition.js",["87","88","89","90"],"import React, { useState } from 'react'\r\nimport './edition.css'\r\nimport _ from 'lodash'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport qs from 'qs'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\nfunction CreateEdition() {\r\n    const [link, setLink] = useState(\"\")\r\n    const [success, setSuccess] = useState(0)\r\n    const list = []\r\n    const [error, setError] = useState(\"Error\")\r\n    const [edition, setEdition] = useState({\r\n        enumber: \"\",\r\n        ename: \"\",\r\n        edesc: \"\",\r\n        hov: \"\",\r\n        articles: []\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    const [articles, setArticles] = useState({})\r\n    function HandleChange(event) {\r\n        const { name, value } = event.target\r\n        if (name === \"hov\") {\r\n            setLink(value)\r\n        }\r\n        setEdition((previous) => {\r\n            return {\r\n                ...previous,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    function HandleArticle(id) {\r\n        function checkArticle(search) {\r\n            return search === id;\r\n        }\r\n        const found = edition.articles.some(checkArticle)\r\n        if (!found) {\r\n            setEdition((previous) => {\r\n                return {\r\n                    ...previous,\r\n                    articles: [...previous.articles, id]\r\n                }\r\n            })\r\n        } else {\r\n            const array = edition.articles\r\n            const index = array.indexOf(id)\r\n            array.splice(index, 1)\r\n            setEdition((previous) => {\r\n                return {\r\n                    ...previous,\r\n                    articles: array\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    function HandleClick() {\r\n        setSuccess(1)\r\n        axios.post(\"https://thepc.herokuapp.com/api/edition/create\", edition, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + Cookies.get(\"token\"),\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n            setSuccess(2)\r\n            setEdition({\r\n                enumber: \"\",\r\n                ename: \"\",\r\n                edesc: \"\",\r\n                hov: \"\",\r\n                articles: []\r\n            })\r\n        }).catch((err) => {\r\n            setError(err.body)\r\n            console.log(err);\r\n            setSuccess(3)\r\n        })\r\n        console.log(edition)\r\n    }\r\n    React.useEffect(() => {\r\n        axios.get('https://thepc.herokuapp.com/api/approvedArticles', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + Cookies.get(\"token\")\r\n            }\r\n        })\r\n            .then(response => {\r\n                \r\n                setArticles(response.data)\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setLoading(true)\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"container container-edition animate__animated animate__fadeIn\">\r\n            <center>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-sm-2\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"enumber\" id=\"inputArticle\" className=\"form-control\" placeholder=\"E. No.\" autoFocus onChange={HandleChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"ename\" id=\"inputArticle\" className=\"form-control\" placeholder=\"Untitled\" onChange={HandleChange} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"hov\" id=\"inputEmail\" className=\"form-control\" placeholder=\"HoV Link\" onChange={HandleChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea name=\"edesc\" id=\"inputContent\" className=\"form-control \" rows=\"4\" placeholder=\"Edition Description\" onChange={HandleChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {link !== \"\" ?\r\n                                <iframe src={link} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                :\r\n                                <div name=\"acontent\" id=\"preview\" className=\"form-control\">\r\n                                VIDEO PREVIEW\r\n                             </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </center>\r\n            <div className=\"article-list\">\r\n                {loading &&\r\n                    <div className=\"loader mt-0\">\r\n                        <Loader type=\"TailSpin\" color=\"#ff1e56\" height={100} width={100} timeout={30000} />\r\n                        <p>Fetching Articles...</p>\r\n                    </div>\r\n                }\r\n                {!loading &&\r\n                    articles.map((article) => {\r\n                        if (article.approved === \"approved\" && article.editionNumber === undefined) {\r\n                            function checkArticle(id) {\r\n                                return id === article._id;\r\n                            }\r\n                            const found = edition.articles.some(checkArticle)\r\n                            return (\r\n                                <div className=\"card mb-3 mr-5\" onClick={() => HandleArticle(article._id)}>\r\n                                    <div className=\"\">\r\n                                        <div className=\"card-right\">\r\n                                            <span className=\"badge badge-pill badge-dark mt-0 mr-1\">{_.upperCase(article.atype)}</span>\r\n                                            {found && <span className=\"badge badge-pill badge-primary mt-0 mr-1\">{edition.enumber}</span>}\r\n                                            <h5 className=\"card-title\">{article.atitle}</h5>\r\n                                            <p className=\"text-muted\"><small>{article.authorName} {article.collabAuthorName && \" and \" + article.collabAuthorName}</small> </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n            </div>\r\n            {\r\n        success === 0 ?\r\n        <button className=\"btn btn-lg btn-block btn-dark btn-login btn-pink text-uppercase font-weight-bold mb-2 mt-4\" type=\"submit\" onClick={HandleClick}>Publish Edition</button>\r\n        : success === 1 ?\r\n            <button className=\"btn btn-lg btn-block  btn-outline-dark btn-login btn-pink text-uppercase font-weight-bold mb-2 mt-4\" type=\"submit\" onClick={HandleClick}><Loader type=\"Audio\" color=\"#fff\" height={20} width={20} /> </button>\r\n            :\r\n            success === 3 &&\r\n            <button className=\"btn btn-lg btn-block  btn-danger btn-login text-uppercase font-weight-bold mb-2 mt-4\" type=\"submit\" onClick={HandleClick}>Try Again</button>\r\n\r\n    }\r\n    <div className=\"form-group\">\r\n        {success === 3 &&\r\n            <div className=\"alert alert-danger mt-2\">{error}</div>\r\n        }\r\n        {success === 2 &&\r\n            <div className=\"alert alert-success mt-2\">Yay! The edition was published!</div>\r\n        }\r\n        {success === 1 &&\r\n            <div className=\"alert alert-warning mt-2\">Please bare with me. This could take a while.</div>\r\n        }\r\n    </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CreateEdition;","D:\\Code\\twev2\\src\\components\\pages\\all-articles.js",["91"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport \"./articles.css\"\r\nimport ArticleView from './article-view'\r\n\r\nfunction AllArticles(props) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [articles, setArticles] = useState()\r\n    const [fact, setFact] = useState()\r\n    const [fetch, setFetch] = useState(true)\r\n    React.useEffect(()=> {\r\n        axios.get(\"https://catfact.ninja/fact?max_length=240\", {\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then((response)=>{\r\n            setFact(response.data.fact)\r\n        })\r\n    },[])\r\n    React.useEffect(() => {\r\n        if (fetch) {\r\n            axios.get('https://thepc.herokuapp.com/api/admin/allarticles', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + Cookies.get(\"token\")\r\n                }\r\n            })\r\n                .then(response => {\r\n                    setArticles(response.data)\r\n                    setLoading(false)\r\n                    setFetch(false)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    setLoading(false)\r\n                    setFetch(false)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading &&\r\n            <div>\r\n            <h3>Random Fact while you wait:</h3><br />\r\n                    <h6 style={{width: '50%'}}>{fact}</h6><br />\r\n                <div className=\"container-articles mt-0\">\r\n                    <div className=\"loader mt-0\">\r\n                        <Loader type=\"TailSpin\" color=\"#ff1e56\" height={100} width={100} timeout={30000} />\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n            }\r\n            {!loading &&\r\n                <ArticleView articlesProps={articles} valid={props.valid}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllArticles;","D:\\Code\\twev2\\src\\components\\pages\\old-editions.js",[],"D:\\Code\\twev2\\src\\components\\pages\\article-view.js",["92"],"import React, { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport _ from 'lodash'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nimport NewArticle from './new-article'\r\n\r\nfunction ArticleView(props) {\r\n    const articles = props.articlesProps\r\n    // const [newarticle, setNewarticle] = useState({})\r\n    const valid = props.valid\r\n    const [current, setCurrent] = useState({\r\n        comments: []\r\n    })\r\n    const[comm, setComm] = useState(\"\")\r\n    const [choice, setChoice] = useState()\r\n    const [filter, setFilter] = useState(\"All\")\r\n    const [status, setStatus] = useState(0)\r\n    const types = [\"news\", \"editorial\", \"movie\", \"satire\", \"facts\"]\r\n    function HandleArticle(event) {\r\n        setCurrent(event)\r\n    }\r\n    function HandleComment(event){\r\n        const value = event.target.value\r\n        setComm(value)\r\n    }\r\n    function HandleChange(event) {\r\n        setChoice(event)\r\n        const name = event\r\n        setStatus(1)\r\n        switch (event) {\r\n            case \"approved\":\r\n            case \"rejected\":\r\n                axios.patch(\"https://thepc.herokuapp.com/api/articles/\" + current._id, qs.stringify({\r\n                    atitle: current.atitle,\r\n                    atype: current.atype,\r\n                    acontent: current.acontent,\r\n                    approved: name\r\n                }), {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + Cookies.get(\"token\"),\r\n                        'Content-type': 'application/x-www-form-urlencoded'\r\n                    }\r\n                }).then((response) => {\r\n                    setStatus(2)\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    setStatus(3)\r\n                })\r\n                break;\r\n            case \"trash\":\r\n                axios.delete(\"https://thepc.herokuapp.com/api/articles/\" + current._id, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + Cookies.get(\"token\")\r\n                    }\r\n                }, qs.stringify({})\r\n                ).then((response) => {\r\n                    response.status && setStatus(2)\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    setStatus(3)\r\n                })\r\n                break;\r\n            case \"comment\": \r\n            axios.post(\"https://thepc.herokuapp.com/api/articles/comment/\" + current._id, qs.stringify({\r\n                comment: comm\r\n            }), {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + Cookies.get(\"token\"),\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }).then((response) => {\r\n                setStatus(2)\r\n            }).catch(error => {\r\n                console.log(error);\r\n                setStatus(3)\r\n            }).finally(()=>{\r\n                setTimeout(()=>{\r\n                    return (\r\n                        setStatus(0)\r\n                    )\r\n                },1000)\r\n                \r\n            })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid \">\r\n            <div className=\"row btn-group\">\r\n                <span className={filter === \"All\" ? \"badge badge-pill badge-lg badge-dark mt-0 mr-1 active\" : \"badge badge-pill badge-lg badge-dark mt-0 mr-1\"} onClick={() => setFilter(\"All\")}>{_.upperCase(\"All\")}</span>\r\n                {types.map((type) => {\r\n                    return (\r\n                        <span className={filter === type ? \"badge badge-pill badge-lg badge-dark mt-0 mr-1 active\" : \"badge badge-pill badge-lg badge-dark mt-0 mr-1\"} onClick={() => setFilter(type)}>{_.upperCase(type)}</span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {articles? <div className=\"row\">\r\n                <div className=\"col-md-3 left animate__animated animate__fadeIn animate__fast\">\r\n                    {articles.length !== 0 || articles !== undefined ? articles.map((article) => {\r\n                        if (filter !== \"All\") {\r\n                            if (article.atype === filter) {\r\n                                return (\r\n                                    <div className=\"card mb-3\" onClick={() => { HandleArticle(article) }}>\r\n                                        <div className=\"\">\r\n                                            <div className=\"card-right\">\r\n                                                <span className=\"badge badge-pill badge-dark mt-0 mr-1\">{_.upperCase(article.atype)}</span>\r\n                                                {article.editionNumber ? <span className=\"badge badge-pill badge-primary mt-0 mr-1\">{article.editionNumber}</span>\r\n                                                    :\r\n                                                    article.approved === \"approved\" ? <span className=\"badge badge-pill badge-success mt-0 mr-1\">A</span>\r\n                                                        :\r\n                                                        <span className=\"badge badge-pill badge-warning mt-0 mr-1\"> <Icon.Clock color=\"#fff\" /> </span>\r\n                                                }\r\n\r\n                                                <h5 className=\"card-title\">{article.atitle}</h5>\r\n                                                <p className=\"text-muted mb-0 mt-0\"><small>{article.authorName} {article.collabAuthorName && \" and \" + article.collabAuthorName}</small> </p>\r\n                                                                                        </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        } else {\r\n                            return (\r\n                                <div className=\"card mb-3\" onClick={() => { HandleArticle(article) }}>\r\n                                    <div className=\"\">\r\n                                        <div className=\"card-right\">\r\n                                            <span className=\"badge badge-pill badge-dark mt-0 mr-1\">{_.upperCase(article.atype)}</span>\r\n                                            {article.editionNumber ? <span className=\"badge badge-pill badge-primary mt-0 mr-1\">{article.editionNumber}</span>\r\n                                                :\r\n                                                (article.approved === \"approved\" && article.editionNumber !== null) || (status === 2 && choice === \"approved\") ? <span className=\"badge badge-pill badge-success mt-0 mr-1\">A</span>\r\n                                                    :\r\n                                                    article.approved === \"pending\" ? <span className=\"badge badge-pill badge-warning mt-0 mr-1\"> <Icon.Clock color=\"#fff\" /> </span>\r\n                                                        :\r\n                                                        article.approved === \"rejected\" || (status === 2 && choice === \"rejected\") ? <span className=\"badge badge-pill badge-danger mt-0 mr-1\">X</span>\r\n                                                            : null}\r\n\r\n                                            <h5 className=\"card-title\">{article.atitle}</h5>\r\n                                            <p className=\"text-muted mb-0 mt-0\"><small>{article.authorName} {article.collabAuthorName && \" and \" + article.collabAuthorName}</small> </p>\r\n                                              </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }) :\r\n                        <h1>You have not written your first article yet!</h1>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className=\"col-md-9 right animate__animated animate__fadeIn\">\r\n                    {!current.atitle ?\r\n                        <div className=\"container-articles\">\r\n                            {articles.length !== 0 ? <h1 className=\"mt-5\"><span><Icon.Arrow90degLeft /> </span>Click on any article to view it!</h1> :\r\n                                <div>\r\n                                    <h1>You have not submitted your first article yet!</h1>\r\n                                    <a href=\"/dashboard/new article\"><button className=\"btn btn-lg btn-dark btn-block\">Submit an Article</button></a>\r\n                                </div>}\r\n                        </div>\r\n                        :\r\n                        <div className=\"animate__animated animate__fadeIn animate__fast\">\r\n                            <div className=\"\">\r\n                                <div className=\"container-fluid\">\r\n\r\n                                    <center><img src={\"https://thepc.herokuapp.com/api/articles/\" + current._id + \"/picture\"} className=\"img-responsive\" alt={current.atitle} />\r\n                                        {status !== 1 ?\r\n                                            <span className=\"badge badge-md badge-pill mt-2 mr-0 badge-dark badge-tools\">\r\n                                                {valid === \"admin\" && <span className=\"badge badge-pill badge-md icon\"> <Icon.EmojiHeartEyesFill className=\"check\" name=\"approve\" onClick={() => HandleChange(\"approved\")} /> </span>}\r\n                                                {valid === \"admin\" && <span className=\"badge badge-pill badge-md icon\"> <Icon.EmojiAngryFill className=\"x\" onClick={() => HandleChange(\"rejected\")} /> </span>}\r\n                                                {current.author === Cookies.get(\"id\") && <span className=\"badge badge-pill badge-md icon\"> <Icon.PencilFill className=\"pencil\" data-toggle=\"modal\" data-target=\"#exampleModal\" /> </span>}\r\n                                                {current.author === Cookies.get(\"id\") && <span className=\"badge badge-pill badge-md icon\"> <Icon.TrashFill className=\"trash\" onClick={() => HandleChange(\"trash\")} /> </span>}\r\n                                                <span className=\"badge badge-pill badge-md icon\"  > <Icon.ChatFill className=\"comment\" data-toggle=\"modal\" data-target=\"#commentsModal\" /></span>\r\n\r\n                                            </span>\r\n                                            :\r\n                                            <span className=\"badge badge-md badge-pill mt-2 mr-0 badge-dark badge-tools\">\r\n                                                <Loader type=\"Audio\" color=\"#ff1e56\" width=\"2rem\" height=\"2rem\" />\r\n                                            </span>\r\n\r\n                                        }\r\n                                    </center>\r\n                                </div>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"float-left\">\r\n                                            <span className=\"badge badge-md badge-pill badge-dark mt-2 mr-1\">{_.upperCase(current.atype)}</span>\r\n                                            {current.editionNumber ? <span className=\"badge badge-md badge-pill badge-primary mt-2 mr-1\">{current.editionNumber}</span>\r\n                                                :\r\n                                                current.approved === \"approved\" ? <span className=\"badge badge-md badge-pill badge-success mt-2 mr-1\">A</span>\r\n                                                    :\r\n                                                    current.approved === \"pending\" ? <span className=\"badge badge-md badge-pill badge-warning mt-2 mr-1\"> <Icon.Clock color=\"#fff\" /> </span>\r\n                                                        :\r\n                                                        current.approved === \"rejected\" && <span className=\"badge badge-pill badge-md badge-danger mt-0 mr-1\">REJECTED</span>\r\n\r\n                                            }\r\n                                            {choice === \"trash\" && status === 2 &&\r\n                                                <span className=\"badge badge-pill badge-md badge-danger mt-0 mr-1\">{_.upperCase(\"deleted\")}</span>\r\n                                            }\r\n                                            {choice === \"approved\" && status === 2 &&\r\n                                                <span className=\"badge badge-pill badge-md badge-success mt-0 mr-1\">{_.upperCase(\"approved\")}</span>\r\n                                            }\r\n                                            {choice === \"edit\" && status === 2 &&\r\n                                                <span className=\"badge badge-pill badge-md badge-info mt-0 mr-1\">{_.upperCase(\"edited\")}</span>\r\n                                            }\r\n                                            {choice === \"rejected\" && status === 2 &&\r\n                                                <span className=\"badge badge-pill badge-md badge-danger mt-0 mr-1\">{_.upperCase(\"rejected\")}</span>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"float-right\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <h2 className=\"title\">{current.atitle}</h2>\r\n                                    <h5 className=\"text-light\">{current.authorName} {current.collabAuthorName && \" and \" + current.collabAuthorName}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <div class=\"container-fluid container-content\">\r\n                                    <p className=\"content\">{current.acontent}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div> :<></> }\r\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-xl\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Article</h5>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <NewArticle newarticle={current} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"commentsModal\" tabindex=\"-1\" aria-labelledby=\"commentModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-lg\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">{current.atitle}</h5>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body body-top\">\r\n                            {current && current.comments.length === 0 ?\r\n                                <div className=\"badge badge-dark badge-md badge-comment\">\r\n                                    <span className=\"feather\"><Icon.ExclamationTriangleFill className=\"mb-1 mr-1\" /> </span> Nobody has commented on this article yet!\r\n                            </div>\r\n                                :\r\n                                current.comments.map((comment) => {\r\n                                    return (\r\n                                        <div className=\"card mt-1 card-comment\" >\r\n                                           <p className=\"card-title\"> {comment.comment}</p>\r\n                                           <p className=\"text-muted\">{comment.createdBy}</p>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"modal-body border-top\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"comment\" id=\"comment\" className=\"form-control\" placeholder=\"New comment\" onChange={HandleComment} autoFocus />\r\n                                {status === 0 || status === 2 ?\r\n                                                        <button className=\"btn btn-lg btn-dark btn-block btn-login btn-pink text-uppercase font-weight-bold mb-1 mt-3\" type=\"submit\" onClick={()=> HandleChange(\"comment\")}>Comment</button>\r\n                                                        : status === 1 ?\r\n                                                            <button className=\"btn btn-lg btn-outline-dark btn-block btn-login btn-pink text-uppercase font-weight-bold mb-1 mt-3\" ><Loader type=\"Audio\" color=\"#fff\" height={20} width={20} /> </button>\r\n                                                            :\r\n                                                            status === 3 &&\r\n                                                            <button className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-1 mt-3\" type=\"submit\" onClick={()=> HandleChange(\"comment\")}>Try Again</button>\r\n\r\n                                                    } \r\n                                {status === 2 &&\r\n                                        <div className=\"alert alert-success\">Commented!</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleView;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":18,"nodeType":"99","messageId":"100","endLine":8,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"102","line":15,"column":17,"nodeType":"99","messageId":"100","endLine":15,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":41,"column":8,"nodeType":"105","endLine":41,"endColumn":10,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"107","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":10},{"ruleId":"97","severity":1,"message":"108","line":13,"column":11,"nodeType":"99","messageId":"100","endLine":13,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":128,"column":33,"nodeType":"111","endLine":128,"endColumn":181},{"ruleId":"112","severity":1,"message":"113","line":146,"column":44,"nodeType":"114","messageId":"115","endLine":146,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":41,"column":8,"nodeType":"105","endLine":41,"endColumn":10,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":105,"column":95,"nodeType":"114","messageId":"115","endLine":105,"endColumn":97},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'setOnline' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'qs' is defined but never used.","'list' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},"Update the dependencies array to be: [fetch]",{"range":"124","text":"125"},{"range":"126","text":"125"},[1432,1434],"[fetch]",[1407,1409]]